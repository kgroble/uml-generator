digraph uml {
rankdir = BT;
"MicrosoftLineParser" [
	shape = "record",
	label = <{MicrosoftLineParser||+ &lt;init&gt;(): void<br align="left"/>+ parse(java.lang.String): java.lang.String<br align="left"/>}>
];
"ILineParser" [
	shape = "record",
	label = <{<I>ILineParser</I>||+ parse(java.lang.String): java.lang.String<br align="left"/>}>
];
"Object" [
	shape = "record",
	label = <{Object||+ &lt;init&gt;(): void<br align="left"/>- registerNatives(): void<br align="left"/>+ getClass(): java.lang.Class<br align="left"/>+ hashCode(): int<br align="left"/>+ equals(java.lang.Object): boolean<br align="left"/># clone(): java.lang.Object<br align="left"/>+ toString(): java.lang.String<br align="left"/>+ notify(): void<br align="left"/>+ notifyAll(): void<br align="left"/>+ wait(long): void<br align="left"/>+ wait(long, int): void<br align="left"/>+ wait(): void<br align="left"/># finalize(): void<br align="left"/>  &lt;clinit&gt;(): void<br align="left"/>}>
];
"GoogleLineParser" [
	shape = "record",
	label = <{GoogleLineParser||+ &lt;init&gt;(): void<br align="left"/>+ parse(java.lang.String): java.lang.String<br align="left"/>}>
];
"DataStandardizer" [
	shape = "record",
	label = <{DataStandardizer|# company: java.lang.String<br align="left"/># data: java.lang.String<br align="left"/>- lineParsers: java.util.Map<br align="left"/># frame: javax.swing.JFrame<br align="left"/># topPanel: javax.swing.JPanel<br align="left"/># txtField: javax.swing.JTextField<br align="left"/># button: javax.swing.JButton<br align="left"/># scrollPane: javax.swing.JScrollPane<br align="left"/># textArea: javax.swing.JTextArea<br align="left"/># label: javax.swing.JLabel<br align="left"/>|+ &lt;init&gt;(): void<br align="left"/>+ parse(java.lang.String): void<br align="left"/>+ getCompany(): java.lang.String<br align="left"/>+ getData(): java.lang.String<br align="left"/>+ addLineParser(java.lang.String, problem.ILineParser): void<br align="left"/># createAndShowGUI(): void<br align="left"/>+ execute(): void<br align="left"/>}>
];
"DataStandardizerApp" [
	shape = "record",
	label = <{DataStandardizerApp||+ &lt;init&gt;(): void<br align="left"/>+ main(java.lang.String[]): void<br align="left"/>}>
];
"AmazonLineParser" [
	shape = "record",
	label = <{AmazonLineParser||+ &lt;init&gt;(): void<br align="left"/>+ parse(java.lang.String): java.lang.String<br align="left"/>}>
];
"MicrosoftLineParser" -> "ILineParser"[
	style = "dashed",
	arrowhead = "onormal"
];
"MicrosoftLineParser" -> "Object"[
	arrowhead = "onormal"
];
"ILineParser" -> "Object"[
	arrowhead = "onormal"
];
"GoogleLineParser" -> "ILineParser"[
	style = "dashed",
	arrowhead = "onormal"
];
"GoogleLineParser" -> "Object"[
	arrowhead = "onormal"
];
"DataStandardizer" -> "Object"[
	arrowhead = "onormal"
];
"DataStandardizerApp" -> "Object"[
	arrowhead = "onormal"
];
"AmazonLineParser" -> "ILineParser"[
	style = "dashed",
	arrowhead = "onormal"
];
"AmazonLineParser" -> "Object"[
	arrowhead = "onormal"
];
}
